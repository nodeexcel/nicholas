{"version":3,"sources":["../src/index.js"],"names":["app","server","createServer","use","exposedHeaders","config","corsHeaders","json","limit","bodyLimit","urlencoded","extended","static","join","__dirname","initRoutes","cwd","resolve","err","routes","console","log","forEach","routePath","require","default","length","listen","process","env","PORT"],"mappings":";;;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;AAEA,IAAMA,MAAM,wBAAZ,C,CAXA;;AAYAA,IAAIC,MAAJ,GAAa,eAAKC,YAAL,CAAkBF,GAAlB,CAAb;;AAEAA,IAAIG,GAAJ,CAAQ,qBAAR;AACAH,IAAIG,GAAJ,CAAQ,oBAAK;AACTC,oBAAgB,sBAAYC,MAAZ,CAAmBC;AAD1B,CAAL,CAAR;AAGAN,IAAIG,GAAJ,CAAQ,qBAAWI,IAAX,CAAgB;AACpBC,WAAO,sBAAYH,MAAZ,CAAmBI;AADN,CAAhB,CAAR;AAGAT,IAAIG,GAAJ,CAAQ,qBAAWO,UAAX,CAAsB;AAC1BC,cAAU;AADgB,CAAtB,CAAR;AAGAX,IAAIG,GAAJ,CAAQ,kBAAQS,MAAR,CAAe,eAAKC,IAAL,CAAUC,SAAV,CAAf,CAAR;;AAEAd,IAAIG,GAAJ,CAAQ,iCAAR;;AAEA,IAAMY,aAAa,SAAbA,UAAa,CAACf,GAAD,EAAS;AACxB;AACA,wBAAK,eAAL,EAAsB;AAClBgB,aAAK,eAAKC,OAAL,CAAa,OAAb;AADa,KAAtB,EAEG,UAACC,GAAD,EAAMC,MAAN,EAAiB;AAChB,YAAID,GAAJ,EAAS;AACLE,oBAAQC,GAAR,CAAY,gCAAZ;AACA;AACH;AACDF,eAAOG,OAAP,CAAe,UAACC,SAAD,EAAe;AAC1BC,oBAAQD,SAAR,EAAmBE,OAAnB,CAA2BzB,GAA3B,EAD0B,CACO;AACpC,SAFD;AAGAoB,gBAAQC,GAAR,CAAY,cAAcF,OAAOO,MAArB,GAA8B,cAA1C;AACH,KAXD;AAYH,CAdD;;AAgBAX,WAAWf,GAAX;AACAA,IAAIC,MAAJ,CAAW0B,MAAX,CAAkBC,QAAQC,GAAR,CAAYC,IAAZ,IAAoB,IAAtC,EAA4C,YAAW;AACnDV,YAAQC,GAAR,CAAY,qBAAqB,IAAjC;AACH,CAFD;;kBAIerB,G","file":"index.js","sourcesContent":["/* eslint-disable*/\nimport http from \"http\";\nimport express from \"express\";\nimport cors from \"cors\";\nimport bodyParser from \"body-parser\";\nimport environment from './environment';\nimport db from './db';\nimport expressValidator from \"express-validator\";\nimport glob from \"glob\";\nimport path from \"path\";\n\nconst app = express();\napp.server = http.createServer(app);\n\napp.use(cors());\napp.use(cors({\n    exposedHeaders: environment.config.corsHeaders\n}));\napp.use(bodyParser.json({\n    limit: environment.config.bodyLimit\n}));\napp.use(bodyParser.urlencoded({\n    extended: true\n}));\napp.use(express.static(path.join(__dirname)));\n\napp.use(expressValidator());\n\nconst initRoutes = (app) => {\n    // including all routes\n    glob(\"./routes/*.js\", {\n        cwd: path.resolve(\"./src\")\n    }, (err, routes) => {\n        if (err) {\n            console.log(\"Error occured including routes\");\n            return;\n        }\n        routes.forEach((routePath) => {\n            require(routePath).default(app); // eslint-disable-line\n        });\n        console.log(\"included \" + routes.length + \" route files\");\n    });\n};\n\ninitRoutes(app);\napp.server.listen(process.env.PORT || 5001, function() {\n    console.log(\"Started on port \" + 5001);\n});\n\nexport default app;"]}