{"version":3,"sources":["../../src/controllers/products.js"],"names":["UserController","createProducts","req","res","next","form","IncomingForm","parse","err","fields","files","readFile","file","path","data","csv","toString","lines","split","result","headers","i","length","obj","currentline","j","push","products","findAll","then","resp","map","val","key","remove","index","ProductID","forEach","findOne","where","product","update","create","json","status","message","getProducts","handleErrorResponse","controller"],"mappings":"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","file":"products.js","sourcesContent":["import BaseAPIController from \"./BaseAPIController\";\nimport provideUser from \"../providers/user\";\nimport db from '../db.js';\nimport _ from \"lodash\";\nimport formidable from \"formidable\";\nimport fs from \"fs\";\nimport csvjson from \"csvjson\";\nimport path from \"path\";\n\nexport class UserController extends BaseAPIController {\n\n    createProducts = (req, res, next) => {\n        let form = new formidable.IncomingForm();\n        form.parse(req, function(err, fields, files) {\n            // let new_path = path.join(__dirname, files.file.name);\n            fs.readFile(files.file.path, function(err, data) {\n                var csv = data.toString('utf8')\n                var lines = csv.split(\"\\n\");\n                var result = [];\n                var headers = lines[0].split(\",\");\n                for (var i = 1; i < lines.length - 1; i++) {\n                    var obj = {};\n                    var currentline = lines[i].split(/,|\"/);\n                    for (var j = 0; j < headers.length; j++) {\n                        obj[headers[j]] = currentline[j] ? currentline[j] : null;\n                    }\n                    result.push(obj);\n                }\n\n                db.products.findAll({}).then((resp) => {\n                    _.map(result, (val, key) => {\n                        return _.remove(resp, function(index) {\n                            return (index.ProductID == val.ProductID)\n                        })\n                    })\n\n                })\n                _.forEach(result, (val, key) => {\n                    db.products.findOne({ where: { ProductID: val.ProductID } }).then((product) => {\n                        if (product) {\n                            db.products.update(val, { where: { ProductID: val.ProductID } }).then((data) => {})\n                        } else {\n                            db.products.create(val).then((data) => {})\n                        }\n                    })\n                    if (key == result.length - 1) {\n                        res.json({ status: 1, message: \"success\" })\n                    }\n                })\n            })\n        })\n    }\n\n    getProducts = (req, res, next) => {\n        db.products.findAll({}).then((data) => {\n            res.json({ status: 1, data: data })\n        }, (err) => this.handleErrorResponse(res, err))\n    }\n\n}\n\nconst controller = new UserController();\nexport default controller;"]}