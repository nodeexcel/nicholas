{"version":3,"sources":["../../src/controllers/categories.js"],"names":["UserController","createCategory","req","res","next","categories","checkBody","body","getValidationResult","then","create","data","json","status","err","handleErrorResponse","getAllCategory","findAll","updateCategory","update","where","id","response","deleteCategory","destroy","params","controller"],"mappings":";;;;;;;AAAA;;;;AACA;;;;AACA;;;;;;;;;;;;IACaA,c,WAAAA,c;;;;;;;;;;;;;;0MAETC,c,GAAiB,UAACC,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AACjC,2BAAYC,UAAZ,CAAuBH,IAAII,SAA3B,EAAsCJ,IAAIK,IAA1C,EAAgDL,IAAIM,mBAAJ,EAAhD,EAA2EC,IAA3E,CAAgF,UAACF,IAAD,EAAU;AACtF,6BAAGF,UAAH,CAAcK,MAAd,CAAqBR,IAAIK,IAAzB,EAA+BE,IAA/B,CAAoC,UAACE,IAAD,EAAU;AAC1CR,wBAAIS,IAAJ,CAAS,EAAEC,QAAQ,CAAV,EAAaF,MAAMA,IAAnB,EAAT;AACH,iBAFD,EAEG,UAACG,GAAD;AAAA,2BAAS,MAAKC,mBAAL,CAAyBZ,GAAzB,EAA8BW,GAA9B,CAAT;AAAA,iBAFH;AAGH,aAJD,EAIG,UAACA,GAAD;AAAA,uBAAS,MAAKC,mBAAL,CAAyBZ,GAAzB,EAA8BW,GAA9B,CAAT;AAAA,aAJH;AAKH,S,QAEDE,c,GAAiB,UAACd,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AACjC,yBAAGC,UAAH,CAAcY,OAAd,CAAsB,EAAtB,EAA0BR,IAA1B,CAA+B,UAACE,IAAD,EAAU;AACrCR,oBAAIS,IAAJ,CAAS,EAAEC,QAAQ,CAAV,EAAaF,MAAMA,IAAnB,EAAT;AACH,aAFD,EAEG,UAACG,GAAD;AAAA,uBAAS,MAAKC,mBAAL,CAAyBZ,GAAzB,EAA8BW,GAA9B,CAAT;AAAA,aAFH;AAGH,S,QAEDI,c,GAAiB,UAAChB,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AACjC,yBAAGC,UAAH,CAAcc,MAAd,CAAqBjB,IAAIK,IAAzB,EAA+B,EAAEa,OAAO,EAAEC,IAAInB,IAAIK,IAAJ,CAASc,EAAf,EAAT,EAA/B,EAA+DZ,IAA/D,CAAoE,UAACa,QAAD,EAAc;AAC9EnB,oBAAIS,IAAJ,CAAS,EAAEC,QAAQ,CAAV,EAAaF,MAAMW,QAAnB,EAAT;AACH,aAFD,EAEG,UAACR,GAAD;AAAA,uBAAS,MAAKC,mBAAL,CAAyBZ,GAAzB,EAA8BW,GAA9B,CAAT;AAAA,aAFH;AAGH,S,QAEDS,c,GAAiB,UAACrB,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AACjC,yBAAGC,UAAH,CAAcmB,OAAd,CAAsB,EAAEJ,OAAO,EAAEC,IAAInB,IAAIuB,MAAJ,CAAWJ,EAAjB,EAAT,EAAtB,EAAwDZ,IAAxD,CAA6D,UAACa,QAAD,EAAc;AACvEnB,oBAAIS,IAAJ,CAAS,EAAEC,QAAQ,CAAV,EAAaF,MAAMW,QAAnB,EAAT;AACH,aAFD,EAEG,UAACR,GAAD;AAAA,uBAAS,MAAKC,mBAAL,CAAyBZ,GAAzB,EAA8BW,GAA9B,CAAT;AAAA,aAFH;AAGH,S;;;;;;AAGL,IAAMY,aAAa,IAAI1B,cAAJ,EAAnB;kBACe0B,U","file":"categories.js","sourcesContent":["import BaseAPIController from \"./BaseAPIController\";\nimport provideUser from \"../providers/user\";\nimport db from '../db.js'\nexport class UserController extends BaseAPIController {\n\n    createCategory = (req, res, next) => {\n        provideUser.categories(req.checkBody, req.body, req.getValidationResult()).then((body) => {\n            db.categories.create(req.body).then((data) => {\n                res.json({ status: 1, data: data })\n            }, (err) => this.handleErrorResponse(res, err))\n        }, (err) => this.handleErrorResponse(res, err))\n    }\n\n    getAllCategory = (req, res, next) => {\n        db.categories.findAll({}).then((data) => {\n            res.json({ status: 1, data: data })\n        }, (err) => this.handleErrorResponse(res, err))\n    }\n\n    updateCategory = (req, res, next) => {\n        db.categories.update(req.body, { where: { id: req.body.id } }).then((response) => {\n            res.json({ status: 1, data: response })\n        }, (err) => this.handleErrorResponse(res, err))\n    }\n\n    deleteCategory = (req, res, next) => {\n        db.categories.destroy({ where: { id: req.params.id } }).then((response) => {\n            res.json({ status: 1, data: response })\n        }, (err) => this.handleErrorResponse(res, err))\n    }\n}\n\nconst controller = new UserController();\nexport default controller;"]}