{"version":3,"sources":["../../src/controllers/newsfeed_post.js"],"names":["newsfeed_postController","createNewsfeedPost","req","res","next","newsfeed_post","create","body","then","data","json","status","err","handleErrorResponse","getNewsfeedPost","findAll","updateNewsfeedPost","update","where","id","response","deleteNewsfeedPost","destroy","params","controller"],"mappings":";;;;;;;AAAA;;;;AACA;;;;AACA;;;;;;;;;;;;IACaA,uB,WAAAA,uB;;;;;;;;;;;;;;4NAETC,kB,GAAqB,UAACC,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AACrC,yBAAGC,aAAH,CAAiBC,MAAjB,CAAwBJ,IAAIK,IAA5B,EAAkCC,IAAlC,CAAuC,UAACC,IAAD,EAAU;AAC7CN,oBAAIO,IAAJ,CAAS,EAAEC,QAAQ,CAAV,EAAaF,MAAMA,IAAnB,EAAT;AACH,aAFD,EAEG,UAACG,GAAD;AAAA,uBAAS,MAAKC,mBAAL,CAAyBV,GAAzB,EAA8BS,GAA9B,CAAT;AAAA,aAFH;AAGH,S,QAEDE,e,GAAkB,UAACZ,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AAClC,yBAAGC,aAAH,CAAiBU,OAAjB,CAAyB,EAAzB,EAA6BP,IAA7B,CAAkC,UAACC,IAAD,EAAU;AACxCN,oBAAIO,IAAJ,CAAS,EAAEC,QAAQ,CAAV,EAAaF,MAAMA,IAAnB,EAAT;AACH,aAFD,EAEG,UAACG,GAAD;AAAA,uBAAS,MAAKC,mBAAL,CAAyBV,GAAzB,EAA8BS,GAA9B,CAAT;AAAA,aAFH;AAGH,S,QAEDI,kB,GAAqB,UAACd,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AACrC,yBAAGC,aAAH,CAAiBY,MAAjB,CAAwBf,IAAIK,IAA5B,EAAkC,EAAEW,OAAO,EAAEC,IAAIjB,IAAIK,IAAJ,CAASY,EAAf,EAAT,EAAlC,EAAkEX,IAAlE,CAAuE,UAACY,QAAD,EAAc;AACjFjB,oBAAIO,IAAJ,CAAS,EAAEC,QAAQ,CAAV,EAAaF,MAAMW,QAAnB,EAAT;AACH,aAFD,EAEG,UAACR,GAAD;AAAA,uBAAS,MAAKC,mBAAL,CAAyBV,GAAzB,EAA8BS,GAA9B,CAAT;AAAA,aAFH;AAGH,S,QAEDS,kB,GAAqB,UAACnB,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AACrC,yBAAGC,aAAH,CAAiBiB,OAAjB,CAAyB,EAAEJ,OAAO,EAAEC,IAAIjB,IAAIqB,MAAJ,CAAWJ,EAAjB,EAAT,EAAzB,EAA2DX,IAA3D,CAAgE,UAACY,QAAD,EAAc;AAC1EjB,oBAAIO,IAAJ,CAAS,EAAEC,QAAQ,CAAV,EAAaF,MAAMW,QAAnB,EAAT;AACH,aAFD,EAEG,UAACR,GAAD;AAAA,uBAAS,MAAKC,mBAAL,CAAyBV,GAAzB,EAA8BS,GAA9B,CAAT;AAAA,aAFH;AAGH,S;;;;;;AAIL,IAAMY,aAAa,IAAIxB,uBAAJ,EAAnB;kBACewB,U","file":"newsfeed_post.js","sourcesContent":["import BaseAPIController from \"./BaseAPIController\";\nimport provideUser from \"../providers/user\";\nimport db from '../db.js'\nexport class newsfeed_postController extends BaseAPIController {\n\n    createNewsfeedPost = (req, res, next) => {\n        db.newsfeed_post.create(req.body).then((data) => {\n            res.json({ status: 1, data: data })\n        }, (err) => this.handleErrorResponse(res, err))\n    }\n\n    getNewsfeedPost = (req, res, next) => {\n        db.newsfeed_post.findAll({}).then((data) => {\n            res.json({ status: 1, data: data })\n        }, (err) => this.handleErrorResponse(res, err))\n    }\n\n    updateNewsfeedPost = (req, res, next) => {\n        db.newsfeed_post.update(req.body, { where: { id: req.body.id } }).then((response) => {\n            res.json({ status: 1, data: response })\n        }, (err) => this.handleErrorResponse(res, err))\n    }\n\n    deleteNewsfeedPost = (req, res, next) => {\n        db.newsfeed_post.destroy({ where: { id: req.params.id } }).then((response) => {\n            res.json({ status: 1, data: response })\n        }, (err) => this.handleErrorResponse(res, err))\n    }\n\n}\n\nconst controller = new newsfeed_postController();\nexport default controller;"]}